name: KAIROS CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/kairos-ci.yml'
      - '08-agents/**'
      - 'schemas/**'
      - 'pipelines/**'
      - 'requirements.txt'
      - 'pyproject.toml'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/kairos-ci.yml'
      - '08-agents/**'
      - 'schemas/**'
      - 'pipelines/**'
      - 'requirements.txt'
      - 'pyproject.toml'

jobs:
  kairos:
    name: KAIROS CI
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "start"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Show tree
        shell: bash
        run: |
          echo "::group::tree-root"; ls -la; echo "::endgroup::"
          echo "::group::tree-KAIROS"
          ls -la 08-agents || true
          ls -la 08-agents/KAIROS || true
          echo "::endgroup::"

      - name: Sanity verify paths (strict)
        shell: bash
        run: |
          set -euo pipefail
          for p in \
            "08-agents/KAIROS/.pre-commit-config.yaml" \
            "08-agents/KAIROS/Makefile" \
            "08-agents/KAIROS/scripts/json_schema_check.py" \
            "08-agents/KAIROS/scripts/nr_fm.py"
          do
            if [ -f "$p" ]; then echo "OK $p"; else echo "MISS $p"; exit 1; fi
          done

      - name: Python deps
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f pyproject.toml ]; then
            pip install -e .
          else
            echo "No requirements.txt / pyproject.toml — skipping install"
          fi
          python -c "import jsonschema, yaml; print('jsonschema=',jsonschema.__version__,' PyYAML=',yaml.__version__)"

      - name: Schema self-check
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          SCHEMAS=(schemas/*.json 08-agents/KAIROS/schemas/*.json)
          if [ ${#SCHEMAS[@]} -eq 0 ]; then
            echo "No schema files found — skipping"
            exit 0
          fi
          for f in "${SCHEMAS[@]}"; do
            echo "Checking schema: $f"
            python 08-agents/KAIROS/scripts/json_schema_check.py "$f"
          done

      - name: Frontmatter / fixtures validate (if present)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f pipelines/fm_validate.py ]; then
            python pipelines/fm_validate.py
          else
            echo "pipelines/fm_validate.py not found — skipping"
          fi

      - name: Make ci-validate (if present)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f 08-agents/KAIROS/Makefile ]; then
            make -C 08-agents/KAIROS ci-validate || echo "no ci-validate target — skipping"
          else
            echo "Makefile not found — skipping"
          fi
